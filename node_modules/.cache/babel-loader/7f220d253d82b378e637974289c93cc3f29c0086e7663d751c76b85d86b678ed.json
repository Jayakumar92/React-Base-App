{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { AppReducer } from '@redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootSaga from '../Sagas';\nconst persistConfig = {\n  key: 'quanta-tms',\n  storage\n};\nconst reducer = combineReducers({\n  AppReducer\n});\nconst rootReducer = (state, action) => {\n  if (action.type === 'USER_LOGOUT') {\n    try {\n      localStorage.clear();\n      action.payload.onSuccess();\n      return reducer(undefined, action);\n    } catch {\n      action.payload.onError();\n    }\n  }\n  return reducer(state, action);\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(persistedReducer, {}, compose(applyMiddleware(sagaMiddleware)));\nlet persistor = persistStore(store);\nexport { store, sagaMiddleware, rootSaga, persistor };","map":{"version":3,"names":["createStore","applyMiddleware","compose","combineReducers","createSagaMiddleware","AppReducer","persistStore","persistReducer","storage","rootSaga","persistConfig","key","reducer","rootReducer","state","action","type","localStorage","clear","payload","onSuccess","undefined","onError","persistedReducer","sagaMiddleware","store","persistor"],"sources":["/Users/azharudheen/Jayakumar/React-Js-Projects/React-Base-App/src/redux/Store/index.ts"],"sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { AppReducer } from '@redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n\nimport rootSaga from '../Sagas';\n\nconst persistConfig = {\n  key: 'quanta-tms',\n  storage,\n}\n\nconst reducer = combineReducers({\n  AppReducer,\n});\n\nconst rootReducer = (state: any, action: any) => {\n\n  if (action.type === 'USER_LOGOUT') {\n    try {\n      localStorage.clear();\n      action.payload.onSuccess();\n      return reducer(undefined, action);\n    } catch {\n      action.payload.onError();\n    }\n  }\n  return reducer(state, action);\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  persistedReducer,\n  {},\n  compose(applyMiddleware(sagaMiddleware)),\n);\n\nlet persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport { store, sagaMiddleware, rootSaga, persistor };\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC9E,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,YAAY;EACjBH;AACF,CAAC;AAED,MAAMI,OAAO,GAAGT,eAAe,CAAC;EAC9BE;AACF,CAAC,CAAC;AAEF,MAAMQ,WAAW,GAAGA,CAACC,KAAU,EAAEC,MAAW,KAAK;EAE/C,IAAIA,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACjC,IAAI;MACFC,YAAY,CAACC,KAAK,CAAC,CAAC;MACpBH,MAAM,CAACI,OAAO,CAACC,SAAS,CAAC,CAAC;MAC1B,OAAOR,OAAO,CAACS,SAAS,EAAEN,MAAM,CAAC;IACnC,CAAC,CAAC,MAAM;MACNA,MAAM,CAACI,OAAO,CAACG,OAAO,CAAC,CAAC;IAC1B;EACF;EACA,OAAOV,OAAO,CAACE,KAAK,EAAEC,MAAM,CAAC;AAC/B,CAAC;AAED,MAAMQ,gBAAgB,GAAGhB,cAAc,CAACG,aAAa,EAAEG,WAAW,CAAC;AAEnE,MAAMW,cAAc,GAAGpB,oBAAoB,CAAC,CAAC;AAE7C,MAAMqB,KAAK,GAAGzB,WAAW,CACvBuB,gBAAgB,EAChB,CAAC,CAAC,EACFrB,OAAO,CAACD,eAAe,CAACuB,cAAc,CAAC,CACzC,CAAC;AAED,IAAIE,SAAS,GAAGpB,YAAY,CAACmB,KAAK,CAAC;AAInC,SAASA,KAAK,EAAED,cAAc,EAAEf,QAAQ,EAAEiB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}